const { createDocument } = require('../test-utils');
const { defaultHeaders } = require('../index');

describe('Interests section', () => {
  it('is rendered if present', () => {
    const doc = createDocument({
      "interests": [{ "name": "Smurfing" }]
    });
    const interests = doc.querySelectorAll('#interests ul li');
    expect(interests.length).toBe(1);
    expect(interests[0].textContent).toBe('Smurfing');
  });

  it('is not rendered if empty', () => {
    const doc = createDocument({
      "interests": []
    });
    expect(doc.querySelector('#interests')).toBeNull();
  });

  it('is not rendered if missing', () => {
    const doc = createDocument();
    expect(doc.querySelector('#interests')).toBeNull();
  });

  describe('Header', () => {
    it('has default value', () => {
      const doc = createDocument({
        "interests": [{ "name": "Smurfing" }]
      });
      expect(doc.querySelector("#interests h2").textContent).toBe(defaultHeaders.interests);
    });

    it('supports custom value', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "interests": "Hobbies"
          }
        },
        "interests": [{ "name": "Smurfing" }]
      });
      expect(doc.querySelector("#interests h2").textContent).toBe('Hobbies');
    });

    it('is not rendered if custom value is set to false', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "interests": false
          }
        },
        "interests": [{ "name": "Smurfing" }]
      });
      expect(doc.querySelector("#interests h2")).toBeNull();
      expect(doc.querySelectorAll("#interests ul li").length).toBe(1);
    });

    it('is not rendered if interests section is empty', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "interests": false
          }
        },
        "interests": []
      });
      expect(doc.querySelector("#interests h2")).toBeNull();
    });

    it('is not rendered if interests section is missing', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "interests": false
          }
        }
      });
      expect(doc.querySelector("#interests h2")).toBeNull();
    });
  });

  describe('Footer link', () => {
    it('supports default header', () => {
      const doc = createDocument({
        "interests": [{ "name": "Smurfing" }]
      });
      expect(doc.querySelector('footer a[href="#interests"]').textContent).toBe(defaultHeaders.interests);
    });

    it('supports custom header', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "interests": "Hobbies"
          }
        },
        "interests": [{ "name": "Smurfing" }]
      });
      expect(doc.querySelector('footer a[href="#interests"]').textContent).toBe('Hobbies');
    });

    it('is not rendered if custom header is set to false', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "interests": false
          }
        },
        "interests": [{ "name": "Smurfing" }]
      });
      expect(doc.querySelector('footer a[href="#interests"]')).toBeNull();
    });

    it('is not rendered if interests section is empty', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "interests": false
          }
        },
        "interests": []
      }); 
      expect(doc.querySelector('footer a[href="#interests"]')).toBeNull();
    });

    it('is not rendered if interests section is missing', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "interests": false
          }
        }
      }); 
      expect(doc.querySelector('footer a[href="#interests"]')).toBeNull();
    });
  });
});
