const { createDocument } = require('../test-utils');
const { defaultHeaders } = require('../index');

describe('Projects section', () => {
  it('is rendered if present', () => {
    const doc = createDocument({
      "projects": [
        {
          "name": "Antidote",
          "roles": [
            "Wizard"
          ],
          "highlights": [
            "Saved the world"
          ]
        }
      ]
    });
    const projects = doc.querySelectorAll('#projects ul li.col');
    expect(projects.length).toBe(1);
    expect(projects[0].querySelector('h4').textContent).toBe('Antidote');
    expect(projects[0].querySelector('.caption').textContent).toContain('Wizard');
    const highlights = projects[0].querySelectorAll('ul li');
    expect(highlights.length).toBe(1);
    expect(highlights[0].textContent).toBe('Saved the world');
  });

  it('is not rendered if empty', () => {
    const doc = createDocument({
      "projects": []
    });
    expect(doc.querySelector('#projects')).toBeNull();
  });

  it('is not rendered if missing', () => {
    const doc = createDocument();
    expect(doc.querySelector('#projects')).toBeNull();
  });

  describe('Header', () => {
    it('has default value', () => {
      const doc = createDocument({
        "projects": [{ "name": "Antidote" }]
      });
      expect(doc.querySelector('#projects h2').textContent).toBe(defaultHeaders.projects);
      expect(doc.querySelectorAll('#projects li.col').length).toBe(1);
    });

    it('supports custom value', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "projects": "Custom Projects Header"
          }
        },
        "projects": [{ "name": "Antidote" }]
      });
      expect(doc.querySelector('#projects h2').textContent).toBe('Custom Projects Header');
      expect(doc.querySelectorAll('#projects li.col').length).toBe(1);
    });

    it('is not rendered if custom value is set to false', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "projects": false
          }
        },
        "projects": [{ "name": "Antidote" }]
      });
      expect(doc.querySelector('#projects h2')).toBeNull();
      expect(doc.querySelectorAll('#projects li.col').length).toBe(1);
    });

    it('is not rendered if projects section is empty', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "projects": "Custom Projects Header"
          }
        },
        "projects": []
      });
      expect(doc.querySelector('#projects h2')).toBeNull();
    });

    it('is not rendered if projects section is missing', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "projects": "Custom Projects Header"
          }
        }
      });
      expect(doc.querySelector('#projects h2')).toBeNull();
    });

  });
  describe('Footer link', () => {
    it('supports default header', () => {
      const doc = createDocument({
        "projects": [{ "name": "Antidote" }]
      });
      expect(doc.querySelector('footer a[href="#projects"]').textContent).toBe(defaultHeaders.projects);
    });
    it('supports custom header', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "projects": "Custom Projects Header"
          }
        },
        "projects": [{ "name": "Antidote" }]
      });
      expect(doc.querySelector('footer a[href="#projects"]').textContent).toBe('Custom Projects Header');
    });
    it('is not rendered if custom header is set to false', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "projects": false
          }
        },
        "projects": [{ "name": "Antidote" }]
      });
      expect(doc.querySelector('footer a[href="#projects"]')).toBeNull();
    });
    it('is not rendered if projects section is empty', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "projects": "Custom Projects Header"
          }
        },
        "projects": []
      });
      expect(doc.querySelector('footer a[href="#projects"]')).toBeNull();
    });
    it('is not rendered if projects section is missing', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "projects": "Custom Projects Header"
          }
        }
      });
      expect(doc.querySelector('footer a[href="#projects"]')).toBeNull();
    });
  });
});