const { createDocument } = require('../test-utils');
const { defaultHeaders } = require('../index');

describe('References section', () => {
  it('is rendered if present', () => {
    const doc = createDocument({
      "references": [
        {
          "name": "Papa Smurf",
          "reference": "That is how we do it"
        }
      ]
    });
    const references = doc.querySelectorAll('#references blockquote');
    expect(references.length).toBe(1);
    expect(references[0].querySelector('span').textContent).toBe('That is how we do it');
    expect(references[0].querySelector('cite').textContent).toBe('Papa Smurf');
  });

  it('is not rendered if empty', () => {
    const doc = createDocument({
      "references": []
    });
    expect(doc.querySelector('#references')).toBeNull();
  });

  it('is not rendered if missing', () => {
    const doc = createDocument();
    expect(doc.querySelector('#references')).toBeNull();
  });

  describe('Header', () => {
    it('has default value', () => {
      const doc = createDocument({
        "references": [
          {
            "name": "Papa Smurf",
            "reference": "That is how we do it"
          }
        ]
      });
      expect(doc.querySelector('#references h2').textContent).toBe(defaultHeaders.references);
    });

    it('supports custom value', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "references": "Custom References Header"
          }
        },
        "references": [
          {
            "name": "Papa Smurf",
            "reference": "That is how we do it"
          }
        ]
      });
      expect(doc.querySelector('#references h2').textContent).toBe('Custom References Header');
    });

    it('is not rendered if custom value is set to false', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "references": false
          }
        },
        "references": [
          {
            "name": "Papa Smurf",
            "reference": "That is how we do it"
          }
        ]
      });
      expect(doc.querySelector('#references h2')).toBeNull();
      expect(doc.querySelectorAll('#references li').length).toBe(1);
    });

    it('is not rendered if references section is empty', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "references": "References"
          }
        },
        "references": []
      });
      expect(doc.querySelector('#references h2')).toBeNull();
    });

    it('is not rendered if references section is missing', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "references": "References"
          }
        }
      });
      expect(doc.querySelector('#references h2')).toBeNull();
    });
  });

  describe('Footer link', () => {
    it('supports default header', () => {
      const doc = createDocument({
        "references": [
          {
            "name": "Papa Smurf",
            "reference": "That is how we do it"
          }
        ]
      });
      expect(doc.querySelector('footer a[href="#references"]').textContent).toBe(defaultHeaders.references);
    });

    it('supports custom header', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "references": "Custom References Header"
          }
        },
        "references": [
          {
            "name": "Papa Smurf",
            "reference": "That is how we do it"
          }
        ]
      }); 
      expect(doc.querySelector('footer a[href="#references"]').textContent).toBe('Custom References Header');
    });

    it('is not rendered if custom header is set to false', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "references": false
          }
        },
        "references": [
          {
            "name": "Papa Smurf",
            "reference": "That is how we do it"
          }
        ]
      });
      expect(doc.querySelector('footer a[href="#references"]')).toBeNull();
    });
    
    it('is not rendered if references section is empty', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "references": "References"
          }
        },
        "references": []
      });
      expect(doc.querySelector('footer a[href="#references"]')).toBeNull();
    });

    it('is not rendered if references section is missing', () => {
      const doc = createDocument({
        "meta": {
          "headers": {
            "references": "References"
          }
        }
      });
      expect(doc.querySelector('footer a[href="#references"]')).toBeNull();
    });
  });
});