const { createDocument } = require('../test-utils');
const { defaultHeaders } = require('../index');

describe('Languages section', () => {
  it('is displayed if present', () => {
    const document = createDocument({
      "languages": [
        {
          "language": "Smurfish",
          "fluency": "Native"
        }
      ]
    });
    var languages = document.querySelectorAll('#languages ul li.language');
    expect(languages.length).toBe(1);
    expect(languages[0].querySelector('div:first-child').textContent).toBe('Smurfish');
    expect(languages[0].querySelector('div:last-child').textContent).toBe('Native');
  });

  it('is not displayed if empty', () => {
    const document = createDocument({
      "languages": []
    });
    expect(document.querySelector('#basics #languages')).toBeNull();
  });

  it('is not displayed if missing', () => {
    const document = createDocument();
    expect(document.querySelector('#basics #languages')).toBeNull();
  });

  describe('Header', () => {
    it('Languages has default value', () => {
      const document = createDocument({
        "languages": [{ "language": "Smurfish" }]
      });
      expect(document.querySelector('#basics #languages h2').textContent).toBe(defaultHeaders.languages);
    });

    it('supports custom value', () => {
      const document = createDocument({
        "meta": {
          "headers": {
            "languages": "Lingo"
          }
        },
        "languages": [{ "language": "Smurfish" }]
      });
      expect(document.querySelector('#basics #languages h2').textContent).toBe('Lingo');
    });

    it('is not rendered if custom value is set to false', () => {
      const document = createDocument({
        "meta": {
          "headers": {
            "languages": false
          }
        },
        "languages": [{ "language": "Smurfish" }]
      });
      expect(document.querySelector('#basics #languages h2')).toBeNull();
      expect(document.querySelectorAll('#languages ul li.language').length).toBe(1);
    });

    it('is not rendered if languages section is empty', () => {
      const document = createDocument({
        "meta": {
          "headers": {
            "languages": "Languages"
          }
        },
        "languages": []
      });
      expect(document.querySelector('#basics #languages h2')).toBeNull();
    });

    it('is not rendered if languages section is missing', () => {
      const document = createDocument({
        "meta": {
          "headers": {
            "languages": "Lingo"
          }
        }
      });
      expect(document.querySelector('#basics #languages h2')).toBeNull();
    });
  });

  describe('Footer link', () => {
    it('supports default header', () => {
      const document = createDocument({
        "languages": [{ "language": "Smurfish" }]
      });
      expect(document.querySelector('footer a[href="#languages"]').textContent).toBe(defaultHeaders.languages);
    });

    it('supports custom header', () => {
      const document = createDocument({
        "meta": {
          "headers": {
            "languages": "Lingo"
          }
        },
        "languages": [{ "language": "Smurfish" }]
      });
      expect(document.querySelector('footer a[href="#languages"]').textContent).toBe('Lingo');
    });

    it('is not rendered if custom header is set to false', () => {
      const document = createDocument({
        "meta": {
          "headers": {
            "languages": false
          }
        },
        "languages": [{ "language": "Smurfish" }]
      });
      expect(document.querySelector('footer a[href="#languages"]')).toBeNull();
    });    

    it('is not rendered if languages section is empty', () => {
      const document = createDocument({
        "meta": {
          "headers": {
            "languages": "Lingo"
          }
        },
        "languages": []
      });
      expect(document.querySelector('footer a[href="#languages"]')).toBeNull();
    });

    it('is not rendered if languages section is missing', () => {
      const document = createDocument({
        "meta": {
          "headers": {
            "languages": "Languages"
          }
        }
      });
      expect(document.querySelector('footer a[href="#languages"]')).toBeNull();
    });
  });
});